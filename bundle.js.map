{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://solid-class-designer/webpack/bootstrap","webpack://solid-class-designer/webpack/runtime/define property getters","webpack://solid-class-designer/webpack/runtime/hasOwnProperty shorthand","webpack://solid-class-designer/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","console.log(\"Script loaded and running\");\n\nlet designToolInstance = null;\n\n// Ensure the DOM is fully loaded before initializing the DesignTool\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  console.log(\"DOM fully loaded and parsed\");\n\n  const canvas = document.getElementById(\"designCanvas\");\n\n  if (canvas) {\n    console.log(\"Canvas element found\");\n\n    // Initialize the DesignTool only if not already initialized\n    if (!designToolInstance) {\n      designToolInstance = new DesignTool(canvas);\n      console.log(\"DesignTool initialized and ready to use\");\n\n      // Add event listeners for buttons\n      document.getElementById(\"addClassBtn\").addEventListener(\"click\", () => {\n        designToolInstance.addClass(\"New Class\");\n      });\n\n      document\n        .getElementById(\"addInterfaceBtn\")\n        .addEventListener(\"click\", () => {\n          designToolInstance.addInterface(\"New Interface\");\n        });\n\n      document\n        .getElementById(\"addRelationBtn\")\n        .addEventListener(\"click\", () => {\n          designToolInstance.startAddingRelation();\n          alert(\"Click on two nodes to create a relation\");\n        });\n\n      // Add a sample class node to verify drawing\n      designToolInstance.addClass(\"Test Node\");\n    } else {\n      console.log(\"DesignTool already initialized\");\n    }\n  } else {\n    console.error(\"Canvas element not found!\");\n  }\n});\n\nlet nodeIdCounter = 1; // Global counter for generating unique IDs\n\nclass ClassNode {\n  constructor(x, y, name) {\n    this.id = nodeIdCounter++;\n    this.x = x;\n    this.y = y;\n    this.width = 100;\n    this.height = 60;\n    this.name = name;\n    this.attributes = [];\n    this.methods = [];\n    console.log(`ClassNode created: ${this.name} at (${this.x}, ${this.y})`);\n  }\n\n  addAttribute(attribute) {\n    this.attributes.push(attribute);\n    console.log(`Attribute added to ${this.name}: ${attribute}`);\n  }\n\n  addMethod(method) {\n    this.methods.push(method);\n    console.log(`Method added to ${this.name}: ${method}`);\n  }\n\n  draw(ctx) {\n    ctx.fillStyle = \"#f0f0f0\";\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n    ctx.strokeRect(this.x, this.y, this.width, this.height);\n\n    ctx.fillStyle = \"#000\";\n    ctx.fillText(this.name, this.x + 5, this.y + 15);\n    console.log(\n      `Drawing node \"${this.name}\" at (${this.x}, ${this.y}) with size ${this.width}x${this.height}`\n    );\n\n    let y = this.y + 30;\n    this.attributes.forEach((attr) => {\n      ctx.fillText(attr, this.x + 5, y);\n      y += 15;\n    });\n\n    this.methods.forEach((method) => {\n      ctx.fillText(method, this.x + 5, y);\n      y += 15;\n    });\n  }\n\n  isPointInside(x, y) {\n    const inside =\n      x >= this.x &&\n      x <= this.x + this.width &&\n      y >= this.y &&\n      y <= this.y + this.height;\n    console.log(\n      `Point (${x}, ${y}) is ${inside ? \"inside\" : \"outside\"} node ${this.name}`\n    );\n    return inside;\n  }\n\n  editName(newName) {\n    console.log(`Node name changed from ${this.name} to ${newName}`);\n    this.name = newName;\n  }\n}\n\nclass InterfaceNode extends ClassNode {\n  constructor(x, y, name) {\n    super(x, y, name);\n    this.interfaceTag = \"<<interface>>\";\n    this.interfaceName = name;\n    console.log(`InterfaceNode created: ${this.interfaceName}`);\n  }\n\n  draw(ctx) {\n    super.draw(ctx); // Draw common elements using parent class\n    ctx.fillText(this.interfaceTag, this.x + 5, this.y + 15);\n    ctx.fillText(this.interfaceName, this.x + 5, this.y + 30);\n    console.log(\n      `Interface ${this.interfaceName} drawn at (${this.x}, ${this.y})`\n    );\n  }\n\n  editName(newName) {\n    console.log(\n      `Interface name changed from ${this.interfaceName} to ${newName}`\n    );\n    this.interfaceName = newName;\n  }\n}\n\nclass Relation {\n  constructor(startNode, endNode, type) {\n    this.startNode = startNode;\n    this.endNode = endNode;\n    this.type = type;\n    console.log(\n      `Relation created from ${startNode.name} to ${endNode.name} of type ${type}`\n    );\n  }\n\n  draw(ctx) {\n    const startX = this.startNode.x + this.startNode.width / 2;\n    const startY = this.startNode.y + this.startNode.height / 2;\n    const endX = this.endNode.x + this.endNode.width / 2;\n    const endY = this.endNode.y + this.endNode.height / 2;\n\n    ctx.beginPath();\n    ctx.moveTo(startX, startY);\n    ctx.lineTo(endX, endY);\n    ctx.stroke();\n\n    // Draw arrowhead\n    const angle = Math.atan2(endY - startY, endX - startX);\n    ctx.beginPath();\n    ctx.moveTo(endX, endY);\n    ctx.lineTo(\n      endX - 10 * Math.cos(angle - Math.PI / 6),\n      endY - 10 * Math.sin(angle - Math.PI / 6)\n    );\n    ctx.lineTo(\n      endX - 10 * Math.cos(angle + Math.PI / 6),\n      endY - 10 * Math.sin(angle + Math.PI / 6)\n    );\n    ctx.closePath();\n    ctx.fill();\n\n    // Draw relation type\n    const midX = (startX + endX) / 2;\n    const midY = (startY + endY) / 2;\n    ctx.fillText(this.type, midX, midY);\n    console.log(\n      `Relation ${this.type} drawn from ${this.startNode.name} to ${this.endNode.name}`\n    );\n  }\n}\n\nclass DesignTool {\n  constructor(canvas) {\n    console.log(\"Initializing DesignTool...\");\n    this.canvas = canvas;\n    this.ctx = canvas.getContext(\"2d\");\n    this.nodes = [];\n    this.relations = [];\n    this.selectedNode = null;\n    this.relationStart = null;\n\n    this.resizeCanvas();\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"resize\", () => this.resizeCanvas());\n    }\n\n    this.canvas.addEventListener(\"mousedown\", (e) => this.onMouseDown(e));\n    this.canvas.addEventListener(\"mousemove\", (e) => this.onMouseMove(e));\n    this.canvas.addEventListener(\"mouseup\", (e) => this.onMouseUp(e));\n\n    this.isDragging = false;\n    this.dragStartX = 0;\n    this.dragStartY = 0;\n    this.isAddingRelation = false;\n\n    console.log(\"DesignTool initialized\");\n  }\n\n  resizeCanvas() {\n    if (typeof window !== \"undefined\") {\n      this.canvas.width = window.innerWidth;\n      this.canvas.height = window.innerHeight;\n    } else {\n      this.canvas.width = 1024;\n      this.canvas.height = 768;\n    }\n    console.log(\n      `Canvas resized to: ${this.canvas.width}x${this.canvas.height}`\n    );\n    this.draw();\n  }\n\n  addClass(name = \"ClassName\") {\n    const node = new ClassNode(50, 50, name);\n    this.nodes.push(node);\n    this.draw();\n  }\n\n  addInterface(name = \"InterfaceName\") {\n    const node = new InterfaceNode(50, 50, name);\n    this.nodes.push(node);\n    this.draw();\n  }\n\n  startAddingRelation() {\n    this.isAddingRelation = true;\n    console.log(\"Start adding relation mode\");\n  }\n\n  addRelation(startNode, endNode, type) {\n    const relation = new Relation(startNode, endNode, type);\n    this.relations.push(relation);\n    this.draw();\n  }\n\n  deleteNode(node) {\n    this.nodes = this.nodes.filter((n) => n !== node);\n    this.relations = this.relations.filter(\n      (rel) => rel.startNode !== node && rel.endNode !== node\n    );\n    this.draw();\n    console.log(`Node ${node.name} deleted`);\n  }\n\n  deleteRelation(relation) {\n    this.relations = this.relations.filter((rel) => rel !== relation);\n    this.draw();\n    console.log(`Relation ${relation.type} deleted`);\n  }\n\n  editNode(node, newName, attributes = [], methods = []) {\n    node.editName(newName);\n    node.attributes = attributes;\n    node.methods = methods;\n    this.draw();\n    console.log(`Node ${node.name} edited: new name - ${newName}`);\n  }\n\n  findNodeById(id) {\n    return this.nodes.find((node) => node.id === id);\n  }\n\n  findRelation(startNode, endNode) {\n    return this.relations.find(\n      (relation) =>\n        relation.startNode === startNode && relation.endNode === endNode\n    );\n  }\n\n  onMouseDown(e) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    this.selectedNode = this.nodes.find((node) => node.isPointInside(x, y));\n\n    if (this.selectedNode) {\n      this.isDragging = true;\n      this.dragStartX = x - this.selectedNode.x;\n      this.dragStartY = y - this.selectedNode.y;\n\n      if (this.isAddingRelation) {\n        this.relationStart = this.selectedNode;\n      }\n      console.log(`Node selected: ${this.selectedNode.name}`);\n    }\n  }\n\n  onMouseMove(e) {\n    if (this.isDragging && this.selectedNode) {\n      const rect = this.canvas.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const y = e.clientY - rect.top;\n\n      this.selectedNode.x = x - this.dragStartX;\n      this.selectedNode.y = y - this.dragStartY;\n      console.log(\n        `Node ${this.selectedNode.name} moved to (${this.selectedNode.x}, ${this.selectedNode.y})`\n      );\n\n      this.draw();\n    }\n  }\n\n  onMouseUp() {\n    if (\n      this.isAddingRelation &&\n      this.relationStart &&\n      this.selectedNode &&\n      this.relationStart !== this.selectedNode\n    ) {\n      const type = prompt(\n        \"Enter relation type (e.g., extends, implements, uses):\"\n      );\n      if (type) {\n        this.addRelation(this.relationStart, this.selectedNode, type);\n      }\n      this.isAddingRelation = false;\n      this.relationStart = null;\n    }\n\n    this.isDragging = false;\n    this.selectedNode = null;\n  }\n\n  draw() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.fillStyle = \"#fafafa\"; // Background color for canvas\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n    console.log(\"Drawing nodes and relations\");\n\n    this.relations.forEach((relation) => {\n      console.log(\n        `Drawing relation from ${relation.startNode.name} to ${relation.endNode.name}`\n      );\n      relation.draw(this.ctx);\n    });\n\n    this.nodes.forEach((node) => {\n      console.log(`Drawing node ${node.name}`);\n      node.draw(this.ctx);\n    });\n\n    // Confirmation text\n    this.ctx.fillStyle = \"#333\";\n    this.ctx.font = \"20px Arial\";\n    this.ctx.fillText(\"Canvas Drawing Active\", 10, 30);\n  }\n}\n\nexport { ClassNode, InterfaceNode, Relation, DesignTool };\n"],"names":["__webpack_require__","d","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","console","log","designToolInstance","document","addEventListener","canvas","getElementById","DesignTool","addClass","addInterface","startAddingRelation","alert","error","nodeIdCounter","ClassNode","_createClass","x","y","name","_classCallCheck","this","id","width","height","attributes","methods","concat","value","attribute","push","method","ctx","_this","fillStyle","fillRect","strokeRect","fillText","forEach","attr","inside","newName","InterfaceNode","_ClassNode","_this2","interfaceTag","interfaceName","_inherits","Relation","startNode","endNode","type","startX","startY","endX","endY","beginPath","moveTo","lineTo","stroke","angle","Math","atan2","cos","PI","sin","closePath","fill","midX","midY","_this3","getContext","nodes","relations","selectedNode","relationStart","resizeCanvas","window","e","onMouseDown","onMouseMove","onMouseUp","isDragging","dragStartX","dragStartY","isAddingRelation","innerWidth","innerHeight","draw","node","arguments","length","undefined","relation","filter","n","rel","editName","find","rect","getBoundingClientRect","clientX","left","clientY","top","isPointInside","prompt","addRelation","_this4","clearRect","font"],"sourceRoot":""}